##  Copyright (c) Eduardo Julian. All rights reserved.
##  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
##  If a copy of the MPL was not distributed with this file,
##  You can obtain one at http://mozilla.org/MPL/2.0/.

(;import lux
         (lux (control monoid
                       eq)
              (data/number/int #open ("i" Int/Number Int/Eq))))

## [Signatures]
(defsig #export (Fold F)
  (: (All [a b]
       (-> (-> a b a) a (F b) a))
     foldL)
  (: (All [a b]
       (-> (-> b a a) a (F b) a))
     foldR))

## [Functions]
(def #export (foldM mon fold xs)
  (All [F a] (-> (Monoid a) (Fold F) (F a) a))
  (using [mon fold]
    (foldL ++ unit xs)))

(def #export (size fold xs)
  (All [F a] (-> (Fold F) (F a) Int))
  (using fold
    (foldL (lambda [count _] (i+ 1 count))
           0
           xs)))

(def #export (member? eq fold x xs)
  (All [F a] (-> (Eq a) (Fold F) a (F a) Bool))
  (using [eq fold]
    (foldL (lambda [prev x'] (or prev (= x x')))
           false
           xs)))

(def #export (empty? fold xs)
  (All [F a] (-> (Fold F) (F a) Bool))
  (i= 0 (size fold xs)))
